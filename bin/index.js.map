{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@donsky/node-service/webpack/bootstrap","webpack://@donsky/node-service/webpack/runtime/compat get default export","webpack://@donsky/node-service/webpack/runtime/define property getters","webpack://@donsky/node-service/webpack/runtime/hasOwnProperty shorthand","webpack://@donsky/node-service/webpack/runtime/make namespace object","webpack://@donsky/node-service/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@donsky/node-service/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://@donsky/node-service/external node-commonjs \"assert\"","webpack://@donsky/node-service/external commonjs \"events\"","webpack://@donsky/node-service/./lib/Base.js","webpack://@donsky/node-service/./lib/config.js","webpack://@donsky/node-service/external commonjs \"amqplib\"","webpack://@donsky/node-service/external commonjs \"rabbitmq-stream-js-client\"","webpack://@donsky/node-service/./lib/utils.js","webpack://@donsky/node-service/./lib/Connector.js","webpack://@donsky/node-service/external commonjs \"@donsky/node-avro\"","webpack://@donsky/node-service/./lib/objectFunctions.js","webpack://@donsky/node-service/./lib/errorTypes.js","webpack://@donsky/node-service/./lib/extensions/Publisher.js","webpack://@donsky/node-service/./lib/extensions/Consumer.js","webpack://@donsky/node-service/./lib/extensions/index.js","webpack://@donsky/node-service/./lib/Service.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"assert\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"events\");","\"use strict\"\n\nimport { EventEmitter, once } from \"events\"\n\nconst emitter = new EventEmitter( { captureRejections: true } )\nconst processEmitter = new EventEmitter( { captureRejections: true } )\n\nconst signals = [ \"SIGINT\", \"SIGTERM\", \"SIGUSR2\", \"exit\" ]\nsignals.forEach( signal => processEmitter.once( signal, () => emitter.emit( \"processKill\", signal ) ) )\n\nexport default class Base{\n  constructor(){\n\n  }\n  emit( ...args ){\n    emitter.emit( ...args )\n    return this\n  }\n\n  on( ...args ){\n    emitter.on( ...args )\n    return this\n  }\n\n  off( ...args ){\n    emitter.off( ...args )\n    return this\n  }\n  \n  once = ( ...args ) => once( emitter, ...args )\n}","\"use strict\"\n\nconst {\n  MQ_HOSTNAME         : hostname,\n  MQ_PASSWORD         : password,\n  MQ_PORT             : port,\n  MQ_USERNAME         : username\n} = process.env\n\nexport default {\n  env: process.env.NODE_ENV || \"local\",\n  semVer: \"0.0.0\",\n  mq : {\n    connectionCheckDelay: 1000,\n    hostname, password, port, username\n  }\n}","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"amqplib\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rabbitmq-stream-js-client\");","\"use strict\"\n\nexport const merge = ( config, updates ) => ( {\n  ...updates,\n  ...config,\n  ...Object.entries( updates )\n    .reduce( ( mix, [ key, val ] ) =>\n      ( {\n        ...mix,\n        [ key ]: config[ key ]\n          ? config[ key ] instanceof Object && !( config[ key ] instanceof Array )\n            ? { ...config[ key ], ...val }\n            : val\n          : val\n      } ), {} )\n} )","\"use strict\"\n\nimport AMQP from \"amqplib\"\nimport * as rabbit from \"rabbitmq-stream-js-client\"\nimport Base from \"./Base\"\nimport { merge } from \"./utils\"\n\nconst connectionCheckDelay = 1000\nlet sharedConnectionOptions = {\n  hostname: null,\n  password: null,\n  port: null,\n  username: null\n}\n\n\nexport default class Connector extends Base {\n  #queueMQConn\n  #queueConnected = false\n  #streamMQConn\n  #streamConnected = false\n\n  static configure( updates ){\n    sharedConnectionOptions = merge( sharedConnectionOptions, updates )\n  }\n  async #connectQueue(){\n    try {\n      this.#queueMQConn = await AMQP.connect({\n        ...sharedConnectionOptions, \n        protocol : \"amqp\",\n        heartbeat: 60\n      })\n    } catch ( e ) {\n      console.error( e )\n    }\n    this.#queueMQConn.on( \"error\", err =>\n      ( err.message !== \"Connection closing\" )\n      ? conn.emit( \"AMQP:error\", err )\n      : null\n    )\n    this.#queueMQConn.on( \"close\", () =>\n      setTimeout( () => \n        process.nextTick( async () => await this.#connectQueue() ), connectionCheckDelay\n      )\n    )\n  }\n  async #connectStream(){\n    try {\n      this.#streamMQConn = await rabbit.connect({\n        ...sharedConnectionOptions,\n        host: sharedConnectionOptions.hostname,\n        port: 5552,\n        vhost: \"/\",\n        addressResolver: { enabled: true },\n        listeners: {\n          oncomplete: async () => {\n            console.log( \"complete args:\", arguments )\n          },\n          connection_closed: async () => {\n            console.log( \"connection_closed args:\", arguments )\n            console.info(`In connection closed event...`)\n            try {\n              await this.#streamMQConn.restart()\n              console.log( \"restarted stream connection to rabbit\" )\n            } catch ( error ) {\n              console.error(`Could not reconnect to Rabbit!`, error)\n            }\n          }\n        }\n      }/*, console */)\n      //this.#streamMQConn.connection.serverEndpoint.host = sharedConnectionOptions.hostname\n    } catch ( e ) {\n      console.error( e )\n    }\n  }\n  constructor(){\n    super()\n  }\n  static async queueConnection(){\n    const conn = new Connector()\n    if ( !conn.#queueConnected ){\n      await conn.#connectQueue()\n    }\n    return conn.#queueMQConn\n  }\n  static async streamConnection(){\n    const conn = new Connector()\n    if ( !conn.#streamConnected ){\n      await conn.#connectStream()\n    }\n    return conn.#streamMQConn\n  }\n}","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@donsky/node-avro\");","\"use strict\"\n\nexport const merge = ( config, updates ) => ( {\n  ...updates,\n  ...config,\n  ...Object.entries( updates )\n    .reduce( ( mix, [ key, val ] ) =>\n      ( {\n        ...mix,\n        [ key ]: config[ key ]\n          ? config[ key ] instanceof Object && !( config[ key ] instanceof Array )\n            ? { ...config[ key ], ...val }\n            : val\n          : val\n      } ), {} )\n} )","\"use strict\"\n\nexport class InterfaceError extends TypeError {\n  constructor(argsObj){\n    const { message, statusCode, statusMessage } = argsObj\n    super(message)\n    this.name = this.constructor.name\n    this.statusCode = statusCode\n    this.statusMessage = statusMessage\n    if (typeof Error.captureStackTrace === 'function') {\n        Error.captureStackTrace(this, this.constructor);\n    } else {\n        this.stack = (new Error(message)).stack;\n    }\n  }\n}","\"use strict\"\n\nexport default class Publisher {\n  connection\n  stream\n  publisher\n\n  constructor( connection, stream ){\n    this.connection = connection\n    this.stream = stream\n    if (!(this instanceof Publisher)) {\n      return new Publisher(connection, stream);\n    }\n    return (async () => {\n      try {\n        await this.connection.createStream({\n          stream: this.stream,\n          arguments: { \"max-length-bytes\": 5 * 1e9 }\n        })\n      } catch ( e ) {\n        if ( !e.message.includes(\"code 17\") ) {\n          throw e\n        }\n      }\n      try {\n        this.publisher = await this.connection.declarePublisher({\n          stream: this.stream,\n          publisherRef: `publisherRef-${new Date().getTime()}`\n        })\n        this.publisher.on('error', ( err ) =>  console.error( err ) );\n      } catch ( e ) {\n        console.error(e)\n        throw e\n      }\n      return this;\n    })()\n  }\n  on( event, callBack ){\n    this.publisher.on( event, callBack )\n  }\n  send( buffer ){\n    this.publisher.send( buffer )\n  }\n  close(){\n    return this.publisher.close()\n  }\n}","\"use strict\"\n\nexport default class Consumer {\n  config\n  connection\n  consumer\n\n  constructor(connection, config, callBack){\n    this.connection = connection\n    this.config = config\n\n    if (!(this instanceof Consumer)) {\n      return new Consumer(connection, config, callBack);\n    }\n    return (async () => {\n      if ( !callBack === null ){\n        throw new Error(\"No message processor declared\")\n      }\n      try {\n        await this.connection.createStream({\n          stream: this.config.stream,\n          arguments: { \"max-length-bytes\": 5 * 1e9 }\n        })\n      } catch ( e ) {\n        console.log(\"ERRRRR:\", e)\n        if ( e.code !== 17 ) {\n          throw err\n        }\n      }\n      console.log(\"attach consumer\", this.config)\n      this.consumer = await this.connection.declareConsumer(\n                              this.config,\n                              callBack\n                            )\n      return this;\n    })()\n  }\n  on( event, callBack){\n    this.consumer.on( event, callBack )\n  }\n  async close(){\n    return await this.consumer.close()\n  }\n}","\"use strict\"\n\nimport Publisher from \"./Publisher\"\nimport Consumer from \"./Consumer\"\n\nexport { Consumer, Publisher };\n\nexport const compareServiceAction = ( left, right ) => {\n  switch ( false ) {\n    case left.version === right.version: throw \"compareServiceAction: [version] mismatch.\";\n    case left.action === right.action: throw \"compareServiceAction: [action] mismatch.\";\n    case left.method === right.method: throw \"compareServiceAction: [method] mismatch.\";\n    case left.topic === right.topic: throw \"compareServiceAction: [topic] mismatch.\";\n    case left.route === right.route: throw \"compareServiceAction: [route] mismatch.\";\n    case left.requestTransformers === right.requestTransformers: throw \"compareServiceAction: [requestTransformers] mismatch.\";\n    case left.responseTransformers === right.responseTransformers: throw \"compareServiceAction: [responseTransformers] mismatch.\";\n    case left.requestAVRO === right.requestAVRO: throw \"compareServiceAction: [requestAVRO] mismatch.\";\n    case left.responseAVRO === right.responseAVRO: throw \"compareServiceAction: [responseAVRO] mismatch.\";\n    default: break;\n  }\n}","\"use strict\"\n\nimport assert from \"assert\"\nimport Base from \"./Base\"\nimport configuration from \"./config\"\nimport Connector from \"./Connector\"\nimport * as rabbit from \"rabbitmq-stream-js-client\"\nimport { fromAVRO, toAVRO } from \"@donsky/node-avro\"\nimport { merge } from \"./objectFunctions\"\nimport { InterfaceError } from \"./errorTypes\"\nimport { Consumer, Publisher, compareServiceAction } from \"./extensions\"\n\nlet config = { ...configuration }\n\nconst SN_SERVICE_ACTIVE_NAMES = Symbol( \"Service-ActiveNames\" )\nconst SN_SERVICE_NAMED_VERSIONS = Symbol( \"Service-NamedVersions\" )\nconst QN_SERVICE_NAME_TOGGLE = Symbol( \"ServiceName-Toggle\" )\n\n\n/**\n * Service class\n */\nexport default class Service extends Base {\n  #actions\n\n  #queueConnection\n  #serviceChannel\n  #streamConnection\n\n  /**\n   * Overwrites local config for initialization\n   * @param { Object } updates - overwrites for local config\n   */\n  static configure( updates ) {\n    config = merge( config, updates )\n  }\n\n  /**\n   * Main Base contrcutor\n   * @param { Object } actions - list of actions and their lambdas\n   */\n  constructor( actions ){\n    super()\n    this.#actions = {...Object.entries( actions ).reduce( ( wrapper, [ key, value]  ) => {\n      wrapper[ key ] = {\n        ...value,\n        requestTransformers: value.requestTransformers.map( fn => fn.toString() ),\n        responseTransformers: value.responseTransformers.map( fn => fn.toString() )\n      }\n      return wrapper\n    }, {}) }\n\n    if (!(this instanceof Service)) {\n      return new Service(actions)\n    }\n\n    return (async () => {\n      // Asynchronous operation\n      this.#actions = {...Object.entries( actions ).reduce( ( wrapper, [ key, value]  ) => {\n        wrapper[ key ] = {\n          ...value,\n          requestTransformers: value.requestTransformers.map( fn => fn.toString() ),\n          responseTransformers: value.responseTransformers.map( fn => fn.toString() )\n        }\n        return wrapper\n      }, {}) };\n      await this.#connect()\n      this.on( \"processKill\", () => this.#deconstruct() )\n      return this; // Return the initialized object\n    })();\n  }\n\n  #deconstruct(){\n    console.log( \"Destruction of Service: ${config.topic}\" )\n    this.#queueConnection?.close()\n    this.#streamConnection?.close()\n  }\n\n  /**\n   * Makes initial connection and attaches to property of same name\n   */\n  async #connect(){\n    Connector.configure( config.mq )\n\n    this.#queueConnection = await Connector.queueConnection()\n    this.#streamConnection = await Connector.streamConnection()\n    \n    this.#queueConnection.on( \"error\", error => {\n      this.emit( \"error\", error )\n    })\n    await this.#discoverServices()\n    await this.#createChannelConsumer()\n  }\n\n  #reconnect(){\n    this.emit( \"reconnecting\" )\n    setTimeout( () =>\n      process.nextTick( this.#connect.bind( this ) )\n    , config.mq.connectionCheckDelay )\n  }\n  /**\n   * Registers the service with the queue for discovery\n   */\n  async #discoverServices() {\n    if ( !this.#actions == {} ){\n      throw new InterfaceError({\n        message: \"No valid actions. This service won't be discoverable by the gateway automatically and is basically useless anyways. Why did you start the service without any actions?\",\n        statusCode: 404,\n        statusMessage: `actions: ${JSON.parse(this.#actions)}`\n      })\n    }\n    if ( !config.topic ) {\n      throw new InterfaceError({\n        message: \"No valid topic[hostname]. This service won't be discoverable by the gateway automatically\",\n        statusCode: 404,\n        statusMessage: `config.mq.hostname: ${config.topic}`\n      })\n    }\n    const streamProcessor = async ( stream, offset, postDataElements = [], filter = {} ) => {\n      const list = []\n      try {\n        await new Promise( async ( resolve, reject ) => {\n          try {\n            const consumerRef = `my-consumer-ref-${new Date().getTime()}`\n            const consumerArgs = { stream, offset, consumerRef }\n            if( filter && JSON.stringify(filter) !== \"{}\" ) consumerArgs.filter = filter\n            let timeout;\n            const consumer = await new Consumer(\n                                        this.#streamConnection,\n                                        consumerArgs,\n                                        async ( message ) => {\n                                          clearTimeout(timeout)\n                                          timeout = setTimeout(()=>{\n                                            clearTimeout(timeout)\n                                            consumer.close()\n                                            console.log(\"resolve after message\")\n                                            resolve()\n                                          },500)\n                                          //console.log( \"MESSAGE content: \", message.content.toString() )\n                                          message.content.toString() |> JSON.parse |> list.push\n                                        })\n            timeout = setTimeout(()=>{\n              clearTimeout(timeout)\n              consumer.close()\n              console.log(\"resolve with no message\")\n              resolve()\n            },1000)\n          } catch ( e ){\n            console.error(e)\n            reject( e )\n          }\n        })\n        //console.log(\"postDataElements\", postDataElements)\n        //console.log(\"list\", list)\n        for ( const element of  postDataElements ){\n          let elementExists = false;\n          for ( const listElem of list ){\n            try {\n              if( typeof listElem ==='string' ){\n                assert.deepEqual(element, listElem);\n                elementExists=true;\n                break;\n              }\n              if ( typeof listElem === 'object' ){\n                compareServiceAction(element, listElem )\n                elementExists=true\n                break;\n              }\n            } catch ( e ) {\n              console.log(\"catch error\", e )\n              continue;\n            }\n          }\n          if ( !elementExists ){\n            const publisher = await new Publisher(this.#streamConnection, stream )\n            await publisher.send( element |> JSON.stringify |> Buffer.from , { topic: config.topic })\n            await publisher.close()\n          }\n        }\n      } catch (e){\n        console.log(\"StreamProcessor ERROR: \", e )\n        throw e\n      }\n    }\n    // const streamVersionFilter = {\n    //   values: [ config.topic ],\n    //   postFilterFunc: (msg) => msg.topic === config.topic,\n    //   matchUnfiltered: true\n    // }\n    try {\n      await streamProcessor( SN_SERVICE_ACTIVE_NAMES.description, rabbit.Offset.first(), [ config.topic ] )\n      await streamProcessor( SN_SERVICE_NAMED_VERSIONS.description, rabbit.Offset.first(), [`${config.topic}-${config.semVer}`]/*, streamVersionFilter */)\n      await streamProcessor( `Service-${config.topic}-${config.semVer}-Actions`, rabbit.Offset.first(), Object.entries( this.#actions ).map( ( [_,action] ) => action ) ) \n    } catch (e){\n      console.error(e)\n    }\n    this.emit( \"actionsRegistered\", this.#actions )\n  }\n  /**\n   * Starts the connection to the MQ\n   * Emits connection or error from failed connection\n   */\n  async #createChannelConsumer() {\n    try{\n      this.#serviceChannel = await this.#queueConnection.createChannel()\n      this.#serviceChannel.assertQueue( config.topic, { durable: true } )\n      this.#serviceChannel.prefetch( 1 )\n      this.#serviceChannel.consume(\n        config.topic,\n        async ( { properties: { type, correlationId, replyTo }, content } ) => {\n          if ( !this.#actions[ type ] ){\n            throw new TypeError( `No Function '${type}' on 'this'` )\n          }\n          try {\n            const { data } = fromAVRO( content, this.#actions[type].requestAVRO )\n            const response = await this.#actions[ type ].lambda.call( this, data )\n            this.#serviceChannel.sendToQueue(\n              replyTo,\n              await toAVRO( { response }, this.#actions[type].responseAVRO, { response: true } ),\n              { type: `${type}Response`, correlationId }\n            )\n          } catch ( error ) {\n            const { name, message, status, stack, userError } = error\n            try {\n              this.#serviceChannel.sendToQueue(\n                replyTo,\n                await toAVRO( {\n                  error: {\n                    name : name ? name : \"PrepareService::channel:consume\",\n                    message : message ? message : \"Unknown Error\",\n                    stack : stack ? stack : \"None\",\n                    status : status ? status : 500,\n                    userError: userError ? userError : false\n                  }\n                }, {}, { error: true } ),\n                { type: `ErrorResponse`, correlationId }\n              )\n              this.emit( \"error\", error )\n            } catch ( error ) {\n              this.emit( \"error\", error )\n            }\n          }\n        }, { noAck: true }\n      )\n    } catch ( error ) {\n      this.emit( \"error\", error )\n    } finally {\n      this.emit( \"ready\", config.topic )\n    }\n  }\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","emitter","EventEmitter","captureRejections","processEmitter","forEach","signal","once","emit","Base","constructor","_defineProperty","_len","arguments","length","args","Array","_key","this","on","off","MQ_HOSTNAME","hostname","MQ_PASSWORD","password","MQ_PORT","port","MQ_USERNAME","username","process","env","semVer","mq","connectionCheckDelay","ownKeys","e","r","t","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","getOwnPropertyDescriptors","defineProperties","_classPrivateFieldInitSpec","_checkPrivateRedeclaration","set","has","TypeError","_classPrivateFieldGet","s","_assertClassBrand","_classPrivateFieldSet","n","sharedConnectionOptions","_queueMQConn","WeakMap","_queueConnected","_streamMQConn","_streamConnected","_Connector_brand","WeakSet","Connector","configure","updates","merge","config","entries","reduce","mix","_ref","val","super","add","queueConnection","_asyncToGenerator","conn","_connectQueue","streamConnection","_connectStream","_connectQueue2","_this","AMQP","protocol","heartbeat","console","error","err","message","setTimeout","nextTick","_connectStream2","_connection_closed","_oncomplete","_arguments","_this2","rabbit","host","vhost","addressResolver","enabled","listeners","oncomplete","log","connection_closed","info","restart","InterfaceError","argsObj","statusCode","statusMessage","name","Error","captureStackTrace","stack","Publisher","connection","stream","createStream","\"max-length-bytes\"","includes","publisher","declarePublisher","publisherRef","concat","Date","getTime","event","callBack","send","buffer","close","Consumer","code","consumer","declareConsumer","compareServiceAction","left","right","version","action","method","topic","route","requestTransformers","responseTransformers","requestAVRO","responseAVRO","configuration","SN_SERVICE_ACTIVE_NAMES","SN_SERVICE_NAMED_VERSIONS","_actions","_queueConnection","_serviceChannel","_streamConnection","_Service_brand","Service","actions","wrapper","map","fn","toString","_ref3","_connect","_deconstruct","_classPrivateFieldGet2","_classPrivateFieldGet3","_connect2","_discoverServices","_createChannelConsumer","_discoverServices2","JSON","parse","streamProcessor","_ref4","offset","postDataElements","list","element","Promise","_ref5","resolve","reject","consumerRef","consumerArgs","stringify","timeout","_ref6","_ref7","_message$content$toSt","clearTimeout","content","elementExists","listElem","assert","_ref8","_element","Buffer","from","description","first","_ref9","_","_createChannelConsumer2","_this3","createChannel","assertQueue","durable","prefetch","consume","_ref11","_ref10","properties","type","correlationId","replyTo","data","fromAVRO","response","lambda","sendToQueue","toAVRO","status","userError","noAck"],"sourceRoot":""}